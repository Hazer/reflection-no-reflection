buildscript {
  repositories {
    mavenCentral()
    jcenter()
  }

  dependencies {
    classpath 'org.gradle.api.plugins:gradle-nexus-plugin:0.7'
    classpath("net.saliman:gradle-cobertura-plugin:2.2.4")
    classpath("org.kt3k.gradle.plugin:coveralls-gradle-plugin:1.0.2")
  }
}

apply plugin: 'java'
apply plugin: 'nexus'
apply plugin: 'cobertura'
apply plugin: 'com.github.kt3k.coveralls'

repositories {
  mavenCentral()

  //only needed to develop the lib
  mavenLocal()

  //for robolectric fork and support
  maven {
    url 'maven_3rd_party'
  }

  //to get snapshots
  maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
}

dependencies {

  //compile 'com.android.tools.build:gradle:0.12.2'
  compile 'com.github.stephanenicolas.javassist:javassist-build-plugin-api:1.0.0'

  //only needed to use Javassist helpers
  compile 'com.github.stephanenicolas.morpheus:morpheus-commons:1.0.9-SNAPSHOT'

  compile 'org.projectlombok:lombok:1.14.2'
  compile 'org.slf4j:slf4j-api:1.7.7'

  //--TESTS
  testCompile "junit:junit:$JUNIT_VERSION"
  testCompile "org.easymock:easymock:$EASY_MOCK_VERSION"
}

modifyPom {
  project {
    name "No Reflection byte code weaver"
    description POM_DESCRIPTION
    url POM_URL

    scm {
      url POM_SCM_URL
      connection POM_SCM_CONNECTION
      developerConnection POM_SCM_DEV_CONNECTION
    }

    licenses {
      license {
        name POM_LICENCE_NAME
        url POM_LICENCE_URL
        distribution POM_LICENCE_DIST
      }
    }

    developers {
      developer {
        id POM_DEVELOPER_ID
        name POM_DEVELOPER_NAME
      }
    }
  }
}

check.dependsOn test
install.dependsOn check

//as we want to have non test classes in test source tree
//http://stackoverflow.com/a/14947906/693752
tasks.withType(Test) {
  scanForTestClasses = false
  include "**/*Test.class"
}

cobertura.coverageFormats = ['html', 'xml'] // coveralls plugin depends on xml format report
//TODO customize
cobertura.auxiliaryClasspath += project.files('../loglifecycle-annotations/build/classes/')
cobertura.coverageIncludes = ['.*com.github.stephanenicolas.loglifecycle.LogLifeCycleProcessor']
